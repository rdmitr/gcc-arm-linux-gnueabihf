name: Build Toolchain with Crosstool-NG

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        target: [aarch64-unknown-linux-gnu, armv6-unknown-linux-gnueabihf]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ gperf bison flex texinfo help2man make libncurses5-dev python3-dev autoconf automake libtool libtool-bin gawk wget bzip2 xz-utils unzip patch libstdc++6 rsync git meson ninja-build

      - name: Download crosstool-ng
        run: |
          wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.26.0.tar.xz
          tar -xf crosstool-ng-1.26.0.tar.xz

      - name: Configure and build crosstool-ng
        run: |
          cd crosstool-ng-1.26.0
          ./configure --enable-local
          make

      - name: Configure and build toolchain
        run: |
          cd crosstool-ng-1.26.0
          cp ../config-${{ matrix.target }} ./.config
          ./ct-ng build

      - name: Make toolchain archive
        run: |
          cd ~/x-tools
          tar -cjf ${{ matrix.target }}.tar.bz2 ${{ matrix.target }}

      - name: Archive toolchain artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ~/x-tools/${{ matrix.target }}.tar.bz2

  publish:
    runs-on: ubuntu-20.04

    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            gh release create "${{ github.ref_name }}"  \
            --title="ARM-GCC ${{ github.ref_name }}"    \
            --verify-tag                                \
            ./artifacts/*
          else
            gh release create                           \
            --title="ARM-GCC ${{ github.ref_name }}"    \
            --draft                                     \
            ./artifacts/*
          fi
